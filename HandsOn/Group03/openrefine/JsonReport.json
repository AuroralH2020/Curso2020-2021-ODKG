[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "award-date",
    "expression": "value.toDate()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column award-date using expression value.toDate()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contract-value",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contract-value using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "award-date",
    "expression": "value.toDate()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column award-date using expression value.toDate()"
  },
  {
    "op": "core/column-removal",
    "columnName": "amendment-number",
    "description": "Remove column amendment-number"
  },
  {
    "op": "core/column-removal",
    "columnName": "gsin-description_fr",
    "description": "Remove column gsin-description_fr"
  },
  {
    "op": "core/column-removal",
    "columnName": "competitive-tender_en",
    "description": "Remove column competitive-tender_en"
  },
  {
    "op": "core/column-removal",
    "columnName": "competitive-tender_fr",
    "description": "Remove column competitive-tender_fr"
  },
  {
    "op": "core/column-removal",
    "columnName": "limited-tender-reason",
    "description": "Remove column limited-tender-reason"
  },
  {
    "op": "core/column-removal",
    "columnName": "limited-tender-reason-description_en",
    "description": "Remove column limited-tender-reason-description_en"
  },
  {
    "op": "core/column-removal",
    "columnName": "limited-tender-reason-description_fr",
    "description": "Remove column limited-tender-reason-description_fr"
  },
  {
    "op": "core/column-removal",
    "columnName": "solicitation-procedure",
    "description": "Remove column solicitation-procedure"
  },
  {
    "op": "core/column-removal",
    "columnName": "solicitation-procedure-description_en",
    "description": "Remove column solicitation-procedure-description_en"
  },
  {
    "op": "core/column-removal",
    "columnName": "solicitation-procedure-description_fr",
    "description": "Remove column solicitation-procedure-description_fr"
  },
  {
    "op": "core/column-removal",
    "columnName": "trade-agreement",
    "description": "Remove column trade-agreement"
  },
  {
    "op": "core/column-removal",
    "columnName": "trade-agreement-description_en",
    "description": "Remove column trade-agreement-description_en"
  },
  {
    "op": "core/column-removal",
    "columnName": "trade-agreement-description_fr",
    "description": "Remove column trade-agreement-description_fr"
  },
  {
    "op": "core/column-removal",
    "columnName": "supplier-standardized-name",
    "description": "Remove column supplier-standardized-name"
  },
  {
    "op": "core/column-removal",
    "columnName": "supplier-operating-name",
    "description": "Remove column supplier-operating-name"
  },
  {
    "op": "core/column-removal",
    "columnName": "organization-employee-count_fr",
    "description": "Remove column organization-employee-count_fr"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "total-contract-value",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column total-contract-value using expression value.toNumber()"
  },
  {
    "op": "core/column-removal",
    "columnName": "date-file-published",
    "description": "Remove column date-file-published"
  },
  {
    "op": "core/column-removal",
    "columnName": "country-percentage",
    "description": "Remove column country-percentage"
  },
  {
    "op": "core/column-removal",
    "columnName": "country-description_en",
    "description": "Remove column country-description_en"
  },
  {
    "op": "core/column-removal",
    "columnName": "procurement-entity-name_fr",
    "description": "Remove column procurement-entity-name_fr"
  },
  {
    "op": "core/column-removal",
    "columnName": "country-description_fr",
    "description": "Remove column country-description_fr"
  },
  {
    "op": "core/column-removal",
    "columnName": "procurement-entity-name_en",
    "description": "Remove column procurement-entity-name_en"
  },
  {
    "op": "core/column-removal",
    "columnName": "contracting-address-street-1",
    "description": "Remove column contracting-address-street-1"
  },
  {
    "op": "core/column-removal",
    "columnName": "contracting-address-street-2",
    "description": "Remove column contracting-address-street-2"
  },
  {
    "op": "core/column-removal",
    "columnName": "contracting-entity-office-name_fr",
    "description": "Remove column contracting-entity-office-name_fr"
  },
  {
    "op": "core/column-removal",
    "columnName": "end-user-entity_fr",
    "description": "Remove column end-user-entity_fr"
  },
  {
    "op": "core/column-removal",
    "columnName": "number-records",
    "description": "Remove column number-records"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "﻿contract-number",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "asd",
    "columnInsertIndex": 1,
    "description": "Create column asd at index 1 based on column ﻿contract-number using expression grel:value"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "contract-value",
          "expression": "value",
          "columnName": "contract-value",
          "from": -10000000,
          "to": 0,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contract-value",
          "expression": "value",
          "columnName": "contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 0,
                "l": "0.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contract-value",
          "expression": "value",
          "columnName": "contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 1,
                "l": "1.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "asd",
    "expression": "join ([coalesce(cells['asd'].value,''),coalesce(cells['contract-value'].value,'')],'--')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column asd using expression join ([coalesce(cells['asd'].value,''),coalesce(cells['contract-value'].value,'')],'--')"
  },
  {
    "op": "core/column-removal",
    "columnName": "﻿contract-number",
    "description": "Remove column ﻿contract-number"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "asd",
    "newColumnName": "contract-number",
    "description": "Rename column asd to contract-number"
  },
  {
    "op": "core/column-removal",
    "columnName": "total-contract-value",
    "description": "Remove column total-contract-value"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "contract-value",
    "newColumnName": "total-contract-value",
    "description": "Rename column contract-value to total-contract-value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "gsin-description_en",
    "expression": "grel:value.replace(\"'\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column gsin-description_en using expression grel:value.replace(\"'\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-legal-name",
    "expression": "grel:value.replace(\"'\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-legal-name using expression grel:value.replace(\"'\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "expression": "grel:value.replace(\"'\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-city using expression grel:value.replace(\"'\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-prov-state",
    "expression": "grel:value.replace(\"'\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-prov-state using expression grel:value.replace(\"'\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-postal-code",
    "expression": "grel:value.replace(\"'\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-postal-code using expression grel:value.replace(\"'\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "expression": "grel:value.replace(\"'\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-address-city using expression grel:value.replace(\"'\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "end-user-entity_en",
    "expression": "grel:value.replace(\"'\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column end-user-entity_en using expression grel:value.replace(\"'\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-entity-office-name_en",
    "expression": "grel:value.replace(\"'\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-entity-office-name_en using expression grel:value.replace(\"'\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-country",
    "expression": "grel:value.replace(\"'\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-country using expression grel:value.replace(\"'\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-country",
    "expression": "grel:value.replace(\"'\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-address-country using expression grel:value.replace(\"'\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-postal-code",
    "expression": "grel:value.replace(\"'\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-address-postal-code using expression grel:value.replace(\"'\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-prov-state",
    "expression": "grel:value.replace(\"'\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-address-prov-state using expression grel:value.replace(\"'\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "from": 100000000,
          "to": 830000000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "gsin-description_en",
    "expression": "grel:value.replace(\"é\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column gsin-description_en using expression grel:value.replace(\"é\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "from": 100000000,
          "to": 830000000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "expression": "grel:value.replace(\"é\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-city using expression grel:value.replace(\"é\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "from": 100000000,
          "to": 830000000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-legal-name",
    "expression": "grel:value.replace(\"é\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-legal-name using expression grel:value.replace(\"é\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "from": 100000000,
          "to": 830000000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "organization-employee-count_en",
    "expression": "grel:value.replace(\"é\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column organization-employee-count_en using expression grel:value.replace(\"é\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "from": 100000000,
          "to": 830000000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-postal-code",
    "expression": "grel:value.replace(\"é\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-postal-code using expression grel:value.replace(\"é\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "from": 100000000,
          "to": 830000000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-country",
    "expression": "grel:value.replace(\"é\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-country using expression grel:value.replace(\"é\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "from": 100000000,
          "to": 830000000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-prov-state",
    "expression": "grel:value.replace(\"é\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-prov-state using expression grel:value.replace(\"é\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "from": 100000000,
          "to": 830000000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-postal-code",
    "expression": "grel:value.replace(\"é\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-address-postal-code using expression grel:value.replace(\"é\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "from": 100000000,
          "to": 830000000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-prov-state",
    "expression": "grel:value.replace(\"é\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-address-prov-state using expression grel:value.replace(\"é\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "from": 100000000,
          "to": 830000000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "expression": "grel:value.replace(\"é\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-address-city using expression grel:value.replace(\"é\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "from": 100000000,
          "to": 830000000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-entity-office-name_en",
    "expression": "grel:value.replace(\"é\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-entity-office-name_en using expression grel:value.replace(\"é\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "from": 100000000,
          "to": 830000000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "end-user-entity_en",
    "expression": "grel:value.replace(\"é\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column end-user-entity_en using expression grel:value.replace(\"é\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "from": 100000000,
          "to": 830000000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-country",
    "expression": "grel:value.replace(\"é\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-address-country using expression grel:value.replace(\"é\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "gsin-description_en",
    "expression": "grel:value.replace(\"é\",\"e\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column gsin-description_en using expression grel:value.replace(\"é\",\"e\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-legal-name",
    "expression": "grel:value.replace(\"é\",\"e\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-legal-name using expression grel:value.replace(\"é\",\"e\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "expression": "grel:value.replace(\"é\",\"e\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-city using expression grel:value.replace(\"é\",\"e\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-prov-state",
    "expression": "grel:value.replace(\"é\",\"e\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-prov-state using expression grel:value.replace(\"é\",\"e\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-postal-code",
    "expression": "grel:value.replace(\"é\",\"e\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-postal-code using expression grel:value.replace(\"é\",\"e\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-country",
    "expression": "grel:value.replace(\"é\",\"e\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-country using expression grel:value.replace(\"é\",\"e\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "end-user-entity_en",
    "expression": "grel:value.replace(\"é\",\"e\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column end-user-entity_en using expression grel:value.replace(\"é\",\"e\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-entity-office-name_en",
    "expression": "grel:value.replace(\"é\",\"e\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-entity-office-name_en using expression grel:value.replace(\"é\",\"e\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "expression": "grel:value.replace(\"é\",\"e\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-address-city using expression grel:value.replace(\"é\",\"e\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-entity-office-name_en",
    "expression": "grel:value.replace(\"É\",\"E\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-entity-office-name_en using expression grel:value.replace(\"É\",\"E\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "expression": "grel:value.replace(\"É\",\"E\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-address-city using expression grel:value.replace(\"É\",\"E\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-prov-state",
    "expression": "grel:value.replace(\"É\",\"E\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-address-prov-state using expression grel:value.replace(\"É\",\"E\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-prov-state",
    "expression": "grel:value.replace(\"é\",\"e\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-address-prov-state using expression grel:value.replace(\"é\",\"e\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-country",
    "expression": "grel:value.replace(\"é\",\"e\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-address-country using expression grel:value.replace(\"é\",\"e\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "gsin-description_en",
    "expression": "grel:value.replace(\"é\",\"e\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column gsin-description_en using expression grel:value.replace(\"é\",\"e\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-legal-name",
    "expression": "grel:value.replace(\"é\",\"e\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-legal-name using expression grel:value.replace(\"é\",\"e\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-legal-name",
    "expression": "grel:value.replace(\"É\",\"E\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-legal-name using expression grel:value.replace(\"É\",\"E\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "gsin-description_en",
    "expression": "grel:value.replace(/[^\\u0020-\\u007F]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column gsin-description_en using expression grel:value.replace(/[^\\u0020-\\u007F]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "supplier-legal-name",
          "expression": "value.unicode()",
          "columnName": "supplier-legal-name",
          "from": 130,
          "to": 260,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-legal-name",
    "expression": "grel:value.replace(/[^\\u0020-\\u007F]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-legal-name using expression grel:value.replace(/[^\\u0020-\\u007F]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "supplier-address-city",
          "expression": "value.unicode()",
          "columnName": "supplier-address-city",
          "from": 130,
          "to": 210,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "expression": "grel:value.replace(/[^\\u0020-\\u007F]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-city using expression grel:value.replace(/[^\\u0020-\\u007F]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-prov-state",
    "expression": "grel:value.replace(/[^\\u0020-\\u007F]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-prov-state using expression grel:value.replace(/[^\\u0020-\\u007F]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-postal-code",
    "expression": "grel:value.replace(/[^\\u0020-\\u007F]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-postal-code using expression grel:value.replace(/[^\\u0020-\\u007F]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-country",
    "expression": "grel:value.replace(/[^\\u0020-\\u007F]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-country using expression grel:value.replace(/[^\\u0020-\\u007F]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "organization-employee-count_en",
    "expression": "grel:value.replace(/[^\\u0020-\\u007F]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column organization-employee-count_en using expression grel:value.replace(/[^\\u0020-\\u007F]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "contracting-entity-office-name_en",
          "expression": "value.unicode()",
          "columnName": "contracting-entity-office-name_en",
          "from": 120,
          "to": 210,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-entity-office-name_en",
    "expression": "grel:value.replace(\"È\",\"E\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-entity-office-name_en using expression grel:value.replace(\"È\",\"E\")"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city",
          "expression": "value",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "xxx",
                "l": "xxx"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-postal-code",
    "expression": "grel:value.replace(/[^\\u0020-\\u007F]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-address-postal-code using expression grel:value.replace(/[^\\u0020-\\u007F]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-prov-state",
    "expression": "grel:value.replace(/[^\\u0020-\\u007F]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-address-prov-state using expression grel:value.replace(/[^\\u0020-\\u007F]/,\"\")"
  },
  {
    "op": "core/recon",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "config": {
      "mode": "standard-service",
      "service": "https://wdreconcile.toolforge.org/en/api",
      "identifierSpace": "http://www.wikidata.org/entity/",
      "schemaSpace": "http://www.wikidata.org/prop/direct/",
      "type": {
        "id": "Q515",
        "name": "city"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "description": "Reconcile cells in column contracting-address-city to type Q515"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "OTTAWA",
    "judgment": "matched",
    "match": {
      "id": "Q1930",
      "name": "Ottawa",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Ottawa (Q1930) for cells containing \"OTTAWA\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "OTTAWA",
    "judgment": "matched",
    "match": {
      "id": "Q1930",
      "name": "Ottawa",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Ottawa (Q1930) for cells containing \"OTTAWA\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "OTTAWA",
    "judgment": "matched",
    "match": {
      "id": "Q1930",
      "name": "Ottawa",
      "types": [
        "Q17457753",
        "Q14762300",
        "Q5119",
        "Q1549591",
        "Q486972"
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Ottawa (Q1930) for cells containing \"OTTAWA\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "OROMOCTO",
    "judgment": "matched",
    "match": {
      "id": "Q1966925",
      "name": "Oromocto",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Oromocto (Q1966925) for cells containing \"OROMOCTO\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "EDMONTON",
    "judgment": "matched",
    "match": {
      "id": "Q2096",
      "name": "Edmonton",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Edmonton (Q2096) for cells containing \"EDMONTON\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "VANCOUVER",
    "judgment": "matched",
    "match": {
      "id": "Q24639",
      "name": "Vancouver",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Vancouver (Q24639) for cells containing \"VANCOUVER\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "TORONTO",
    "judgment": "matched",
    "match": {
      "id": "Q172",
      "name": "Toronto",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Toronto (Q172) for cells containing \"TORONTO\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "LONDON",
    "judgment": "matched",
    "match": {
      "id": "Q92561",
      "name": "London",
      "types": [
        "Q6593035",
        "Q14762300",
        "Q515",
        "Q1549591"
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item London (Q92561) for cells containing \"LONDON\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "PORT AUX BASQUES",
    "judgment": "matched",
    "match": {
      "id": "Q1013617",
      "name": "Channel-Port aux Basques",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Channel-Port aux Basques (Q1013617) for cells containing \"PORT AUX BASQUES\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "Edmonton",
    "judgment": "matched",
    "match": {
      "id": "Q2096",
      "name": "Edmonton",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Edmonton (Q2096) for cells containing \"Edmonton\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "FORT NELSON",
    "judgment": "matched",
    "match": {
      "id": "Q606045",
      "name": "Fort Nelson",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Fort Nelson (Q606045) for cells containing \"FORT NELSON\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "ST HUBERT",
    "judgment": "matched",
    "match": {
      "id": "Q139398",
      "name": "Longueuil",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Longueuil (Q139398) for cells containing \"ST HUBERT\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "DALVAY",
    "judgment": "matched",
    "match": {
      "id": "Q5211759",
      "name": "Dalvay-by-the-Sea",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Dalvay-by-the-Sea (Q5211759) for cells containing \"DALVAY\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "SIDNEY",
    "judgment": "matched",
    "match": {
      "id": "Q390530",
      "name": "Sidney",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Sidney (Q390530) for cells containing \"SIDNEY\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "WATERTON PARK",
    "judgment": "matched",
    "match": {
      "id": "Q7974475",
      "name": "Waterton Park, Alberta",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Waterton Park, Alberta (Q7974475) for cells containing \"WATERTON PARK\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "VICTORIA",
    "judgment": "matched",
    "match": {
      "id": "Q2132",
      "name": "Victoria",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Victoria (Q2132) for cells containing \"VICTORIA\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "KOUCHIBOUGQUAC",
    "judgment": "matched",
    "match": {
      "id": "Q6434464",
      "name": "Kouchibouguac, New Brunswick",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Kouchibouguac, New Brunswick (Q6434464) for cells containing \"KOUCHIBOUGQUAC\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "ST JOHNS",
    "judgment": "matched",
    "match": {
      "id": "Q2082",
      "name": "St. John's",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item St. John's (Q2082) for cells containing \"ST JOHNS\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "DUNDURN",
    "judgment": "matched",
    "match": {
      "id": "Q1427108",
      "name": "Dundurn",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Dundurn (Q1427108) for cells containing \"DUNDURN\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "JASPER",
    "judgment": "matched",
    "match": {
      "id": "Q999429",
      "name": "Jasper",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Jasper (Q999429) for cells containing \"JASPER\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "BURLINGTON",
    "judgment": "matched",
    "match": {
      "id": "Q34218",
      "name": "Burlington",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Burlington (Q34218) for cells containing \"BURLINGTON\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "KINGSTON",
    "judgment": "matched",
    "match": {
      "id": "Q202973",
      "name": "Kingston",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Kingston (Q202973) for cells containing \"KINGSTON\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "MONTREAL",
    "judgment": "matched",
    "match": {
      "id": "Q340",
      "name": "Montreal",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Montreal (Q340) for cells containing \"MONTREAL\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "TRENTON",
    "judgment": "matched",
    "match": {
      "id": "Q2739754",
      "name": "Trenton",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Trenton (Q2739754) for cells containing \"TRENTON\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "KANATA",
    "judgment": "matched",
    "match": {
      "id": "Q1723642",
      "name": "Kanata",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Kanata (Q1723642) for cells containing \"KANATA\" in column contracting-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "similarValue": "REVELSTOKE",
    "judgment": "matched",
    "match": {
      "id": "Q1893229",
      "name": "Revelstoke",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Revelstoke (Q1893229) for cells containing \"REVELSTOKE\" in column contracting-address-city"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "expression": "grel:value.replace(/[^\\u0020-\\u007F]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-address-city using expression grel:value.replace(/[^\\u0020-\\u007F]/,\"\")"
  },
  {
    "op": "core/recon",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "config": {
      "mode": "standard-service",
      "service": "https://wdreconcile.toolforge.org/en/api",
      "identifierSpace": "http://www.wikidata.org/entity/",
      "schemaSpace": "http://www.wikidata.org/prop/direct/",
      "type": {
        "id": "Q515",
        "name": "city"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "description": "Reconcile cells in column supplier-address-city to type Q515"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Ottawa",
    "judgment": "matched",
    "match": {
      "id": "Q1930",
      "name": "Ottawa",
      "types": [
        "Q17457753",
        "Q14762300",
        "Q5119",
        "Q1549591",
        "Q486972"
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Ottawa (Q1930) for cells containing \"Ottawa\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Montreal",
    "judgment": "matched",
    "match": {
      "id": "Q340",
      "name": "Montreal",
      "types": [
        "Q27676416",
        "Q200250",
        "Q1637706"
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Montreal (Q340) for cells containing \"Montreal\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Concord",
    "judgment": "matched",
    "match": {
      "id": "Q5158752",
      "name": "Concord, Ontario",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Concord, Ontario (Q5158752) for cells containing \"Concord\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Mississauga",
    "judgment": "matched",
    "match": {
      "id": "Q50816",
      "name": "Mississauga",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Mississauga (Q50816) for cells containing \"Mississauga\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Edmonton",
    "judgment": "matched",
    "match": {
      "id": "Q2096",
      "name": "Edmonton",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Edmonton (Q2096) for cells containing \"Edmonton\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Campbellville",
    "judgment": "matched",
    "match": {
      "id": "Q5028230",
      "name": "Campbellville",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Campbellville (Q5028230) for cells containing \"Campbellville\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "St. Johns",
    "judgment": "matched",
    "match": {
      "id": "Q2082",
      "name": "St. John's",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item St. John's (Q2082) for cells containing \"St. Johns\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Vancouver",
    "judgment": "matched",
    "match": {
      "id": "Q24639",
      "name": "Vancouver",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Vancouver (Q24639) for cells containing \"Vancouver\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Markham",
    "judgment": "matched",
    "match": {
      "id": "Q44016",
      "name": "Markham",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Markham (Q44016) for cells containing \"Markham\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Lakeside",
    "judgment": "matched",
    "match": {
      "id": "Q14875697",
      "name": "Lakeside, Nova Scotia",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Lakeside, Nova Scotia (Q14875697) for cells containing \"Lakeside\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "MONTREAL",
    "judgment": "matched",
    "match": {
      "id": "Q340",
      "name": "Montreal",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Montreal (Q340) for cells containing \"MONTREAL\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "ST-OMER",
    "judgment": "matched",
    "match": {
      "id": "Q3463075",
      "name": "Saint-Omer",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Saint-Omer (Q3463075) for cells containing \"ST-OMER\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Oakville",
    "judgment": "matched",
    "match": {
      "id": "Q424984",
      "name": "Oakville",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Oakville (Q424984) for cells containing \"Oakville\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Burlington",
    "judgment": "matched",
    "match": {
      "id": "Q34218",
      "name": "Burlington",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Burlington (Q34218) for cells containing \"Burlington\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Surrey",
    "judgment": "matched",
    "match": {
      "id": "Q390583",
      "name": "Surrey",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Surrey (Q390583) for cells containing \"Surrey\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Kanata",
    "judgment": "matched",
    "match": {
      "id": "Q1723642",
      "name": "Kanata",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Kanata (Q1723642) for cells containing \"Kanata\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Delhi",
    "judgment": "matched",
    "match": {
      "id": "Q3312326",
      "name": "Delhi",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Delhi (Q3312326) for cells containing \"Delhi\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Bedford",
    "judgment": "matched",
    "match": {
      "id": "Q813856",
      "name": "Bedford",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Bedford (Q813856) for cells containing \"Bedford\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "ARICHAT",
    "judgment": "matched",
    "match": {
      "id": "Q2861229",
      "name": "Arichat",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Arichat (Q2861229) for cells containing \"ARICHAT\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Saint-Louis-de-Kent",
    "judgment": "matched",
    "match": {
      "id": "Q3462755",
      "name": "Saint-Louis-de-Kent, New Brunswick",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Saint-Louis-de-Kent, New Brunswick (Q3462755) for cells containing \"Saint-Louis-de-Kent\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Toronto",
    "judgment": "matched",
    "match": {
      "id": "Q172",
      "name": "Toronto",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Toronto (Q172) for cells containing \"Toronto\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "hamilton",
    "judgment": "matched",
    "match": {
      "id": "Q133116",
      "name": "Hamilton",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Hamilton (Q133116) for cells containing \"hamilton\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Downsview",
    "judgment": "matched",
    "match": {
      "id": "Q5303305",
      "name": "Downsview",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Downsview (Q5303305) for cells containing \"Downsview\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Laval (Quibec)",
    "judgment": "matched",
    "match": {
      "id": "Q141810",
      "name": "Laval",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Laval (Q141810) for cells containing \"Laval (Quibec)\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Rexdale",
    "judgment": "matched",
    "match": {
      "id": "Q7319368",
      "name": "Rexdale",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Rexdale (Q7319368) for cells containing \"Rexdale\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Port Coquitlam",
    "judgment": "matched",
    "match": {
      "id": "Q643326",
      "name": "Port Coquitlam",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Port Coquitlam (Q643326) for cells containing \"Port Coquitlam\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Bridgewater",
    "judgment": "matched",
    "match": {
      "id": "Q474178",
      "name": "Bridgewater",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Bridgewater (Q474178) for cells containing \"Bridgewater\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Saint John",
    "judgment": "matched",
    "match": {
      "id": "Q203403",
      "name": "Saint John",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Saint John (Q203403) for cells containing \"Saint John\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Victoria",
    "judgment": "matched",
    "match": {
      "id": "Q2132",
      "name": "Victoria",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Victoria (Q2132) for cells containing \"Victoria\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "OTTAWA",
    "judgment": "matched",
    "match": {
      "id": "Q1930",
      "name": "Ottawa",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Ottawa (Q1930) for cells containing \"OTTAWA\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Langley",
    "judgment": "matched",
    "match": {
      "id": "Q923243",
      "name": "Langley",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Langley (Q923243) for cells containing \"Langley\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Hamilton",
    "judgment": "matched",
    "match": {
      "id": "Q133116",
      "name": "Hamilton",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Hamilton (Q133116) for cells containing \"Hamilton\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Kenora",
    "judgment": "matched",
    "match": {
      "id": "Q993714",
      "name": "Kenora",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Kenora (Q993714) for cells containing \"Kenora\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "London",
    "judgment": "matched",
    "match": {
      "id": "Q92561",
      "name": "London",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item London (Q92561) for cells containing \"London\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Windsor",
    "judgment": "matched",
    "match": {
      "id": "Q182625",
      "name": "Windsor",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Windsor (Q182625) for cells containing \"Windsor\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Sidney",
    "judgment": "matched",
    "match": {
      "id": "Q390530",
      "name": "Sidney",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Sidney (Q390530) for cells containing \"Sidney\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Piscataway",
    "judgment": "matched",
    "match": {
      "id": "Q1428659",
      "name": "Piscataway",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Piscataway (Q1428659) for cells containing \"Piscataway\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Saanichton",
    "judgment": "matched",
    "match": {
      "id": "Q7395670",
      "name": "Saanichton",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Saanichton (Q7395670) for cells containing \"Saanichton\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Goose Bay, Labrador",
    "judgment": "matched",
    "match": {
      "id": "Q5584021",
      "name": "Goose Bay",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Goose Bay (Q5584021) for cells containing \"Goose Bay, Labrador\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Canmore",
    "judgment": "matched",
    "match": {
      "id": "Q991515",
      "name": "Canmore",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Canmore (Q991515) for cells containing \"Canmore\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Richmond Hill",
    "judgment": "matched",
    "match": {
      "id": "Q52998",
      "name": "Richmond Hill",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Richmond Hill (Q52998) for cells containing \"Richmond Hill\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Kingston",
    "judgment": "matched",
    "match": {
      "id": "Q202973",
      "name": "Kingston",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Kingston (Q202973) for cells containing \"Kingston\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "bradford",
    "judgment": "matched",
    "match": {
      "id": "Q4954551",
      "name": "Bradford",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Bradford (Q4954551) for cells containing \"bradford\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Cleveland",
    "judgment": "matched",
    "match": {
      "id": "Q37320",
      "name": "Cleveland",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Cleveland (Q37320) for cells containing \"Cleveland\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Ottawa,",
    "judgment": "matched",
    "match": {
      "id": "Q1930",
      "name": "Ottawa",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Ottawa (Q1930) for cells containing \"Ottawa,\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Richmond",
    "judgment": "matched",
    "match": {
      "id": "Q236837",
      "name": "Richmond",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Richmond (Q236837) for cells containing \"Richmond\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Miramichi",
    "judgment": "matched",
    "match": {
      "id": "Q1348913",
      "name": "Miramichi",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Miramichi (Q1348913) for cells containing \"Miramichi\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Inuvik",
    "judgment": "matched",
    "match": {
      "id": "Q338686",
      "name": "Inuvik",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Inuvik (Q338686) for cells containing \"Inuvik\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Val des Monts",
    "judgment": "matched",
    "match": {
      "id": "Q3553385",
      "name": "Val-des-Monts",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Val-des-Monts (Q3553385) for cells containing \"Val des Monts\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "BURLINGTON",
    "judgment": "matched",
    "match": {
      "id": "Q34218",
      "name": "Burlington",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Burlington (Q34218) for cells containing \"BURLINGTON\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Delta",
    "judgment": "matched",
    "match": {
      "id": "Q851838",
      "name": "Delta",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Delta (Q851838) for cells containing \"Delta\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "RONKONKOMA",
    "judgment": "matched",
    "match": {
      "id": "Q3459768",
      "name": "Ronkonkoma",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Ronkonkoma (Q3459768) for cells containing \"RONKONKOMA\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Hammonds Plains",
    "judgment": "matched",
    "match": {
      "id": "Q5645874",
      "name": "Hammonds Plains, Upper Sackville and Beaverbank, Nova Scotia",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Hammonds Plains, Upper Sackville and Beaverbank, Nova Scotia (Q5645874) for cells containing \"Hammonds Plains\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Rogers",
    "judgment": "matched",
    "match": {
      "id": "Q1924299",
      "name": "Rogers",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Rogers (Q1924299) for cells containing \"Rogers\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "VICTORIA",
    "judgment": "matched",
    "match": {
      "id": "Q2132",
      "name": "Victoria",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Victoria (Q2132) for cells containing \"VICTORIA\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "NATICK",
    "judgment": "matched",
    "match": {
      "id": "Q367070",
      "name": "Natick",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Natick (Q367070) for cells containing \"NATICK\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Elkins Park",
    "judgment": "matched",
    "match": {
      "id": "Q5364334",
      "name": "Elkins Park",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Elkins Park (Q5364334) for cells containing \"Elkins Park\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Carleton Place",
    "judgment": "matched",
    "match": {
      "id": "Q1041701",
      "name": "Carleton Place",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Carleton Place (Q1041701) for cells containing \"Carleton Place\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Pleasanton",
    "judgment": "matched",
    "match": {
      "id": "Q747444",
      "name": "Pleasanton",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Pleasanton (Q747444) for cells containing \"Pleasanton\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "ottawa",
    "judgment": "matched",
    "match": {
      "id": "Q1930",
      "name": "Ottawa",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Ottawa (Q1930) for cells containing \"ottawa\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Granville",
    "judgment": "matched",
    "match": {
      "id": "Q2485187",
      "name": "Granville",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Granville (Q2485187) for cells containing \"Granville\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "WASHINGTON",
    "judgment": "matched",
    "match": {
      "id": "Q61",
      "name": "Washington, D.C.",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Washington, D.C. (Q61) for cells containing \"WASHINGTON\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Montague",
    "judgment": "matched",
    "match": {
      "id": "Q1009804",
      "name": "Montague",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Montague (Q1009804) for cells containing \"Montague\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Kangiqsujuaq",
    "judgment": "matched",
    "match": {
      "id": "Q991497",
      "name": "Kangiqsujuaq",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Kangiqsujuaq (Q991497) for cells containing \"Kangiqsujuaq\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "PHILADELPHIA",
    "judgment": "matched",
    "match": {
      "id": "Q1345",
      "name": "Philadelphia",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Philadelphia (Q1345) for cells containing \"PHILADELPHIA\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Outremont",
    "judgment": "matched",
    "match": {
      "id": "Q3358665",
      "name": "Outremont",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Outremont (Q3358665) for cells containing \"Outremont\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Aurora",
    "judgment": "matched",
    "match": {
      "id": "Q266438",
      "name": "Aurora",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Aurora (Q266438) for cells containing \"Aurora\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Chelsea",
    "judgment": "matched",
    "match": {
      "id": "Q2962228",
      "name": "Chelsea",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Chelsea (Q2962228) for cells containing \"Chelsea\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Waialua",
    "judgment": "matched",
    "match": {
      "id": "Q2802599",
      "name": "Waialua",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Waialua (Q2802599) for cells containing \"Waialua\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "KETTLE POINT",
    "judgment": "matched",
    "match": {
      "id": "Q6395525",
      "name": "Kettle Point 44, Ontario",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Kettle Point 44, Ontario (Q6395525) for cells containing \"KETTLE POINT\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "ST. LAZARE",
    "judgment": "matched",
    "match": {
      "id": "Q2848417",
      "name": "St. Lazare",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item St. Lazare (Q2848417) for cells containing \"ST. LAZARE\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Mesa",
    "judgment": "matched",
    "match": {
      "id": "Q49261",
      "name": "Mesa",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Mesa (Q49261) for cells containing \"Mesa\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Reston",
    "judgment": "matched",
    "match": {
      "id": "Q1375280",
      "name": "Reston",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Reston (Q1375280) for cells containing \"Reston\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "oakville",
    "judgment": "matched",
    "match": {
      "id": "Q424984",
      "name": "Oakville",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Oakville (Q424984) for cells containing \"oakville\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Covington",
    "judgment": "matched",
    "match": {
      "id": "Q1014171",
      "name": "Covington",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Covington (Q1014171) for cells containing \"Covington\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "OAKVILLE",
    "judgment": "matched",
    "match": {
      "id": "Q424984",
      "name": "Oakville",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Oakville (Q424984) for cells containing \"OAKVILLE\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Shearstown",
    "judgment": "matched",
    "match": {
      "id": "Q7492211",
      "name": "Shearstown, Newfoundland and Labrador",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Shearstown, Newfoundland and Labrador (Q7492211) for cells containing \"Shearstown\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Marion",
    "judgment": "matched",
    "match": {
      "id": "Q2414172",
      "name": "Marion",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Marion (Q2414172) for cells containing \"Marion\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Columbia",
    "judgment": "matched",
    "match": {
      "id": "Q397905",
      "name": "Columbia",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Columbia (Q397905) for cells containing \"Columbia\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "HOUSTON",
    "judgment": "matched",
    "match": {
      "id": "Q16555",
      "name": "Houston",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Houston (Q16555) for cells containing \"HOUSTON\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "oromocto",
    "judgment": "matched",
    "match": {
      "id": "Q1966925",
      "name": "Oromocto",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Oromocto (Q1966925) for cells containing \"oromocto\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Columbus",
    "judgment": "matched",
    "match": {
      "id": "Q16567",
      "name": "Columbus",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Columbus (Q16567) for cells containing \"Columbus\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Etobicoke",
    "judgment": "matched",
    "match": {
      "id": "Q1020159",
      "name": "Etobicoke",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Etobicoke (Q1020159) for cells containing \"Etobicoke\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Cambridge",
    "judgment": "matched",
    "match": {
      "id": "Q1028279",
      "name": "Cambridge",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Cambridge (Q1028279) for cells containing \"Cambridge\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Ville de LaSalle",
    "judgment": "matched",
    "match": {
      "id": "Q1629121",
      "name": "LaSalle",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item LaSalle (Q1629121) for cells containing \"Ville de LaSalle\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Madison",
    "judgment": "matched",
    "match": {
      "id": "Q43788",
      "name": "Madison",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Madison (Q43788) for cells containing \"Madison\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Leamington",
    "judgment": "matched",
    "match": {
      "id": "Q2566566",
      "name": "Leamington",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Leamington (Q2566566) for cells containing \"Leamington\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Austin",
    "judgment": "matched",
    "match": {
      "id": "Q16559",
      "name": "Austin",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Austin (Q16559) for cells containing \"Austin\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Arlington",
    "judgment": "matched",
    "match": {
      "id": "Q17943",
      "name": "Arlington",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Arlington (Q17943) for cells containing \"Arlington\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Montreal,",
    "judgment": "matched",
    "match": {
      "id": "Q340",
      "name": "Montreal",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Montreal (Q340) for cells containing \"Montreal,\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "VANCOUVER",
    "judgment": "matched",
    "match": {
      "id": "Q24639",
      "name": "Vancouver",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Vancouver (Q24639) for cells containing \"VANCOUVER\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Moline",
    "judgment": "matched",
    "match": {
      "id": "Q579736",
      "name": "Moline",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Moline (Q579736) for cells containing \"Moline\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "IQALUIT",
    "judgment": "matched",
    "match": {
      "id": "Q2030",
      "name": "Iqaluit",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Iqaluit (Q2030) for cells containing \"IQALUIT\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Nepean",
    "judgment": "matched",
    "match": {
      "id": "Q1639083",
      "name": "Nepean",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Nepean (Q1639083) for cells containing \"Nepean\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Nepean (Ottawa)",
    "judgment": "matched",
    "match": {
      "id": "Q1639083",
      "name": "Nepean",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Nepean (Q1639083) for cells containing \"Nepean (Ottawa)\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Nashua",
    "judgment": "matched",
    "match": {
      "id": "Q48274",
      "name": "Nashua",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Nashua (Q48274) for cells containing \"Nashua\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Orleans",
    "judgment": "matched",
    "match": {
      "id": "Q3356503",
      "name": "Orleans",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Orleans (Q3356503) for cells containing \"Orleans\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Abbotsford",
    "judgment": "matched",
    "match": {
      "id": "Q271730",
      "name": "Abbotsford",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Abbotsford (Q271730) for cells containing \"Abbotsford\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Huntsville",
    "judgment": "matched",
    "match": {
      "id": "Q79860",
      "name": "Huntsville",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Huntsville (Q79860) for cells containing \"Huntsville\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Gimli",
    "judgment": "matched",
    "match": {
      "id": "Q1659757",
      "name": "Gimli",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Gimli (Q1659757) for cells containing \"Gimli\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Bloomington",
    "judgment": "matched",
    "match": {
      "id": "Q490737",
      "name": "Bloomington",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Bloomington (Q490737) for cells containing \"Bloomington\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Cary",
    "judgment": "matched",
    "match": {
      "id": "Q852665",
      "name": "Cary",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Cary (Q852665) for cells containing \"Cary\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "DELTA",
    "judgment": "matched",
    "match": {
      "id": "Q851838",
      "name": "Delta",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Delta (Q851838) for cells containing \"DELTA\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Alma",
    "judgment": "matched",
    "match": {
      "id": "Q141973",
      "name": "Alma",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Alma (Q141973) for cells containing \"Alma\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "St. Andrews",
    "judgment": "matched",
    "match": {
      "id": "Q1661409",
      "name": "St. Andrews",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item St. Andrews (Q1661409) for cells containing \"St. Andrews\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Milford",
    "judgment": "matched",
    "match": {
      "id": "Q755798",
      "name": "Milford",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Milford (Q755798) for cells containing \"Milford\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Lincoln",
    "judgment": "matched",
    "match": {
      "id": "Q28260",
      "name": "Lincoln",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Lincoln (Q28260) for cells containing \"Lincoln\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "LAFAYETTE",
    "judgment": "matched",
    "match": {
      "id": "Q638187",
      "name": "Lafayette",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Lafayette (Q638187) for cells containing \"LAFAYETTE\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "ALEXANDRIA",
    "judgment": "matched",
    "match": {
      "id": "Q88",
      "name": "Alexandria",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Alexandria (Q88) for cells containing \"ALEXANDRIA\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Wilmington",
    "judgment": "matched",
    "match": {
      "id": "Q174224",
      "name": "Wilmington",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Wilmington (Q174224) for cells containing \"Wilmington\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Montrial",
    "judgment": "matched",
    "match": {
      "id": "Q340",
      "name": "Montreal",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Montreal (Q340) for cells containing \"Montrial\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Los Angeles",
    "judgment": "matched",
    "match": {
      "id": "Q65",
      "name": "Los Angeles",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Los Angeles (Q65) for cells containing \"Los Angeles\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Greely",
    "judgment": "matched",
    "match": {
      "id": "Q5602145",
      "name": "Greely",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Greely (Q5602145) for cells containing \"Greely\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Gimli,",
    "judgment": "matched",
    "match": {
      "id": "Q1659757",
      "name": "Gimli",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Gimli (Q1659757) for cells containing \"Gimli,\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Alexandria",
    "judgment": "matched",
    "match": {
      "id": "Q88",
      "name": "Alexandria",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Alexandria (Q88) for cells containing \"Alexandria\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Las Vegas",
    "judgment": "matched",
    "match": {
      "id": "Q23768",
      "name": "Las Vegas",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Las Vegas (Q23768) for cells containing \"Las Vegas\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "from": 10000000,
          "to": 180000000,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "San Diego",
    "judgment": "matched",
    "match": {
      "id": "Q16552",
      "name": "San Diego",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item San Diego (Q16552) for cells containing \"San Diego\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 8795642,
                "l": "8795642.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Kirkland",
    "judgment": "matched",
    "match": {
      "id": "Q142117",
      "name": "Kirkland",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Kirkland (Q142117) for cells containing \"Kirkland\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 888320,
                "l": "888320.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Kirkland (Montreal)",
    "judgment": "matched",
    "match": {
      "id": "Q142117",
      "name": "Kirkland",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Kirkland (Q142117) for cells containing \"Kirkland (Montreal)\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 94995,
                "l": "94995.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "CONCORD",
    "judgment": "matched",
    "match": {
      "id": "Q5158752",
      "name": "Concord, Ontario",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Concord, Ontario (Q5158752) for cells containing \"CONCORD\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 93713,
                "l": "93713.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "RockyView",
    "judgment": "matched",
    "match": {
      "id": "Q7356039",
      "name": "Rocky View County",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Rocky View County (Q7356039) for cells containing \"RockyView\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 89964,
                "l": "89964.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "FORT NELSON",
    "judgment": "matched",
    "match": {
      "id": "Q606045",
      "name": "Fort Nelson",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Fort Nelson (Q606045) for cells containing \"FORT NELSON\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 84452,
                "l": "84452.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "VICTORIA,",
    "judgment": "matched",
    "match": {
      "id": "Q2132",
      "name": "Victoria",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Victoria (Q2132) for cells containing \"VICTORIA,\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 84049,
                "l": "84049.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Waterloo",
    "judgment": "matched",
    "match": {
      "id": "Q639408",
      "name": "Waterloo",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Waterloo (Q639408) for cells containing \"Waterloo\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 83850,
                "l": "83850.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "MOSCOW",
    "judgment": "matched",
    "match": {
      "id": "Q649",
      "name": "Moscow",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Moscow (Q649) for cells containing \"MOSCOW\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 7803509,
                "l": "7803509.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "ST-LAURENT",
    "judgment": "matched",
    "match": {
      "id": "Q2117999",
      "name": "Saint-Laurent",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Saint-Laurent (Q2117999) for cells containing \"ST-LAURENT\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 77408,
                "l": "77408.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "NORCROSS",
    "judgment": "matched",
    "match": {
      "id": "Q2581974",
      "name": "Norcross",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Norcross (Q2581974) for cells containing \"NORCROSS\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 77386,
                "l": "77386.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Tillsonburg",
    "judgment": "matched",
    "match": {
      "id": "Q2415848",
      "name": "Tillsonburg",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Tillsonburg (Q2415848) for cells containing \"Tillsonburg\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 76508,
                "l": "76508.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Waterloo",
    "judgment": "matched",
    "match": {
      "id": "Q639408",
      "name": "Waterloo",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Waterloo (Q639408) for cells containing \"Waterloo\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 757130,
                "l": "757130.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Stouffville",
    "judgment": "matched",
    "match": {
      "id": "Q7620544",
      "name": "Stouffville",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Stouffville (Q7620544) for cells containing \"Stouffville\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 750000,
                "l": "750000.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Stittsville",
    "judgment": "matched",
    "match": {
      "id": "Q7617682",
      "name": "Stittsville Ward",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Stittsville Ward (Q7617682) for cells containing \"Stittsville\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 726600,
                "l": "726600.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Fort Nelson",
    "judgment": "matched",
    "match": {
      "id": "Q606045",
      "name": "Fort Nelson",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Fort Nelson (Q606045) for cells containing \"Fort Nelson\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 623000,
                "l": "623000.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "LANGLEY",
    "judgment": "matched",
    "match": {
      "id": "Q923243",
      "name": "Langley",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Langley (Q923243) for cells containing \"LANGLEY\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 477338,
                "l": "477338.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Stittsville",
    "judgment": "matched",
    "match": {
      "id": "Q7617682",
      "name": "Stittsville Ward",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Stittsville Ward (Q7617682) for cells containing \"Stittsville\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 438739,
                "l": "438739.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "kirkland",
    "judgment": "matched",
    "match": {
      "id": "Q142117",
      "name": "Kirkland",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Kirkland (Q142117) for cells containing \"kirkland\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 428699,
                "l": "428699.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Les Mechins",
    "judgment": "matched",
    "match": {
      "id": "Q3234105",
      "name": "Les Méchins",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Les Méchins (Q3234105) for cells containing \"Les Mechins\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 412941,
                "l": "412941.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Waterloo",
    "judgment": "matched",
    "match": {
      "id": "Q639408",
      "name": "Waterloo",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Waterloo (Q639408) for cells containing \"Waterloo\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 3787351,
                "l": "3787351.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "North York",
    "judgment": "matched",
    "match": {
      "id": "Q1586510",
      "name": "North York",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item North York (Q1586510) for cells containing \"North York\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 2392000,
                "l": "2392000.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Tignish",
    "judgment": "matched",
    "match": {
      "id": "Q1295698",
      "name": "Tignish",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Tignish (Q1295698) for cells containing \"Tignish\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 2260000,
                "l": "2260000.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Waterloo",
    "judgment": "matched",
    "match": {
      "id": "Q639408",
      "name": "Waterloo",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Waterloo (Q639408) for cells containing \"Waterloo\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 1915845,
                "l": "1915845.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Johnstown",
    "judgment": "matched",
    "match": {
      "id": "Q1070763",
      "name": "Johnstown",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Johnstown (Q1070763) for cells containing \"Johnstown\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 1795500,
                "l": "1795500.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "St-Laurent",
    "judgment": "matched",
    "match": {
      "id": "Q2117999",
      "name": "Saint-Laurent",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Saint-Laurent (Q2117999) for cells containing \"St-Laurent\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 1306980,
                "l": "1306980.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "ENGLEWOOD",
    "judgment": "matched",
    "match": {
      "id": "Q991177",
      "name": "Englewood",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Englewood (Q991177) for cells containing \"ENGLEWOOD\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 1178096,
                "l": "1178096.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Flensburg",
    "judgment": "matched",
    "match": {
      "id": "Q3798",
      "name": "Flensburg",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Flensburg (Q3798) for cells containing \"Flensburg\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 1150000,
                "l": "1150000.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "MOUNT BUCHANAN",
    "judgment": "matched",
    "match": {
      "id": "Q3326012",
      "name": "Mount Buchanan, Prince Edward Island",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Mount Buchanan, Prince Edward Island (Q3326012) for cells containing \"MOUNT BUCHANAN\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 115000,
                "l": "115000.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Regina",
    "judgment": "matched",
    "match": {
      "id": "Q2123",
      "name": "Regina",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Regina (Q2123) for cells containing \"Regina\" in column supplier-address-city"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "total-contract-value",
          "expression": "value",
          "columnName": "total-contract-value",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": 1084657,
                "l": "1084657.0"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "similarValue": "Redmond",
    "judgment": "matched",
    "match": {
      "id": "Q223718",
      "name": "Redmond",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Redmond (Q223718) for cells containing \"Redmond\" in column supplier-address-city"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "supplier-address-city",
    "expression": "grel:\"http://www.wikidata.org/entity/\"+cell.recon.match.id",
    "onError": "set-to-blank",
    "newColumnName": "wikiCity-Supplier",
    "columnInsertIndex": 8,
    "description": "Create column wikiCity-Supplier at index 8 based on column supplier-address-city using expression grel:\"http://www.wikidata.org/entity/\"+cell.recon.match.id"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "contracting-address-city",
    "expression": "grel:\"http://www.wikidata.org/entity/\"+cell.recon.match.id",
    "onError": "set-to-blank",
    "newColumnName": "wikiCity-EndUser",
    "columnInsertIndex": 16,
    "description": "Create column wikiCity-EndUser at index 16 based on column contracting-address-city using expression grel:\"http://www.wikidata.org/entity/\"+cell.recon.match.id"
  },
  {
    "op": "core/recon",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-prov-state",
    "config": {
      "mode": "standard-service",
      "service": "https://wdreconcile.toolforge.org/en/api",
      "identifierSpace": "http://www.wikidata.org/entity/",
      "schemaSpace": "http://www.wikidata.org/prop/direct/",
      "type": {
        "id": "Q11828004",
        "name": "province of Canada"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "description": "Reconcile cells in column contracting-address-prov-state to type Q11828004"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "contracting-address-prov-state",
    "expression": "grel:\"http://www.wikidata.org/entity/\"+cell.recon.match.id",
    "onError": "set-to-blank",
    "newColumnName": "wikiProvince-EndUser",
    "columnInsertIndex": 18,
    "description": "Create column wikiProvince-EndUser at index 18 based on column contracting-address-prov-state using expression grel:\"http://www.wikidata.org/entity/\"+cell.recon.match.id"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "contracting-address-prov-state: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "contracting-address-prov-state",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "expression": "grel:value.replace(\"É\",\"E\")value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-city using expression grel:value.replace(\"É\",\"E\")value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-legal-name",
    "expression": "grel:value.replace(\"É\",\"E\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-legal-name using expression grel:value.replace(\"É\",\"E\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-legal-name",
    "expression": "grel:value.replace(\"é\",\"e\")value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-legal-name using expression grel:value.replace(\"é\",\"e\")value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-legal-name",
    "expression": "grel:value.replace(\"è\",\"e\")value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-legal-name using expression grel:value.replace(\"è\",\"e\")value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "expression": "grel:value.replace(\"è\",\"e\")value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-city using expression grel:value.replace(\"è\",\"e\")value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-legal-name",
    "expression": "grel:value.replace(\"ô\",\"o\")value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-legal-name using expression grel:value.replace(\"ô\",\"o\")value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "supplier-address-city",
          "expression": "value.unicode()",
          "columnName": "supplier-address-city",
          "from": 220,
          "to": 250,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "expression": "grel:value.replace(\"ô\",\"o\")value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-city using expression grel:value.replace(\"ô\",\"o\")value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contract-number",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contract-number using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "expiry-date",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column expiry-date using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "award-date",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column award-date using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "gsin-description_en",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column gsin-description_en using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-legal-name",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-legal-name using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-postal-code",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-postal-code using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "wikiCity-Supplier",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column wikiCity-Supplier using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "total-contract-value",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column total-contract-value using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "gsin",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column gsin using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "end-user-entity_en",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column end-user-entity_en using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-entity-office-name_en",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-entity-office-name_en using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "organization-employee-count_en",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column organization-employee-count_en using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-country",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-country using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-city using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "supplier-address-prov-state",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-prov-state using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-postal-code",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-address-postal-code using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-country",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-address-country using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "wikiProvince-EndUser",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column wikiProvince-EndUser using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-prov-state",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-address-prov-state using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "wikiCity-EndUser",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column wikiCity-EndUser using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "contracting-address-city",
    "expression": "grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-address-city using expression grel:value.replace(\"â€œ\",\"\\\"\").replace(\"â€�\",\"\\\"\")"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "(blank)",
                "l": "(blank)"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "contracting-entity-office-name_en",
          "expression": "value.unicode()",
          "columnName": "contracting-entity-office-name_en",
          "from": 120,
          "to": 170,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-entity-office-name_en",
    "expression": "value.replace(/[‘’‚‛‹›‚]/,\"\\'\").replace(/[“”«»„]/,\"\\\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-entity-office-name_en using expression value.replace(/[‘’‚‛‹›‚]/,\"\\'\").replace(/[“”«»„]/,\"\\\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "contracting-entity-office-name_en",
          "expression": "value.unicode()",
          "columnName": "contracting-entity-office-name_en",
          "from": 120,
          "to": 170,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "contracting-entity-office-name_en",
    "expression": "grel:value.replace(\"\\¨\",\" \")valuevalue",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column contracting-entity-office-name_en using expression grel:value.replace(\"\\¨\",\" \")valuevalue"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "supplier-address-city",
          "expression": "value.unicode()",
          "columnName": "supplier-address-city",
          "from": 130,
          "to": 250,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "expression": "grel:value.replace(\"ö\",\"o\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-city using expression grel:value.replace(\"ö\",\"o\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "supplier-address-city",
          "expression": "value.unicode()",
          "columnName": "supplier-address-city",
          "from": 130,
          "to": 250,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "expression": "grel:value.replace(\"â\",\"a\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-city using expression grel:value.replace(\"â\",\"a\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "supplier-address-city: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "supplier-address-city",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "range",
          "name": "supplier-address-city",
          "expression": "value.unicode()",
          "columnName": "supplier-address-city",
          "from": 130,
          "to": 250,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "supplier-address-city",
    "expression": "grel:value.replace(\"ø\",\"o\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column supplier-address-city using expression grel:value.replace(\"ø\",\"o\")"
  }
]